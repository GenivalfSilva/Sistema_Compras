#!/usr/bin/env python
"""
Script para testar todos os endpoints da API Django V2 com dados V1
"""
import os
import sys
import django
import requests
import json
from datetime import datetime

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'compras_project.settings')
django.setup()

def test_api_endpoints():
    """Testa todos os endpoints da API"""
    
    # Base URL for API
    base_url = "http://127.0.0.1:8000/api"
    
    print("üöÄ Iniciando testes dos endpoints da API Django V2...")
    print("=" * 60)
    
    # Test endpoints
    endpoints = [
        # Test endpoint
        {"url": f"{base_url}/usuarios/test/", "method": "GET", "name": "Test Endpoint"},
        
        # Usuarios endpoints
        {"url": f"{base_url}/usuarios/", "method": "GET", "name": "Lista Usu√°rios"},
        
        # Solicitacoes endpoints
        {"url": f"{base_url}/solicitacoes/", "method": "GET", "name": "Lista Solicita√ß√µes"},
        {"url": f"{base_url}/solicitacoes/dashboard/", "method": "GET", "name": "Dashboard Data"},
        
        # Catalog endpoints
        {"url": f"{base_url}/catalogo/", "method": "GET", "name": "Lista Cat√°logo"},
        
        # Configuracoes endpoints
        {"url": f"{base_url}/configuracoes/", "method": "GET", "name": "Lista Configura√ß√µes"},
        
        # Auditoria endpoints
        {"url": f"{base_url}/auditoria/", "method": "GET", "name": "Lista Auditoria"},
        {"url": f"{base_url}/auditoria/statistics/", "method": "GET", "name": "Estat√≠sticas Auditoria"},
    ]
    
    results = []
    
    for endpoint in endpoints:
        try:
            print(f"\nüì° Testando: {endpoint['name']}")
            print(f"   URL: {endpoint['url']}")
            
            if endpoint['method'] == 'GET':
                response = requests.get(endpoint['url'], timeout=10)
            else:
                response = requests.post(endpoint['url'], timeout=10)
            
            print(f"   Status: {response.status_code}")
            
            if response.status_code == 200:
                try:
                    data = response.json()
                    if isinstance(data, dict):
                        if 'results' in data:
                            print(f"   ‚úÖ Sucesso - {len(data['results'])} itens retornados")
                        elif 'count' in data:
                            print(f"   ‚úÖ Sucesso - Dados: {data}")
                        else:
                            print(f"   ‚úÖ Sucesso - Objeto retornado")
                    elif isinstance(data, list):
                        print(f"   ‚úÖ Sucesso - {len(data)} itens retornados")
                    else:
                        print(f"   ‚úÖ Sucesso - Dados retornados")
                    
                    results.append({"endpoint": endpoint['name'], "status": "SUCCESS", "code": response.status_code})
                except json.JSONDecodeError:
                    print(f"   ‚úÖ Sucesso - Resposta n√£o-JSON")
                    results.append({"endpoint": endpoint['name'], "status": "SUCCESS", "code": response.status_code})
            else:
                print(f"   ‚ùå Erro - Status {response.status_code}")
                print(f"   Resposta: {response.text[:200]}...")
                results.append({"endpoint": endpoint['name'], "status": "ERROR", "code": response.status_code})
                
        except requests.exceptions.ConnectionError:
            print(f"   ‚ùå Erro de Conex√£o - Servidor Django n√£o est√° rodando?")
            results.append({"endpoint": endpoint['name'], "status": "CONNECTION_ERROR", "code": None})
        except Exception as e:
            print(f"   ‚ùå Erro: {e}")
            results.append({"endpoint": endpoint['name'], "status": "EXCEPTION", "code": None})
    
    # Summary
    print("\n" + "=" * 60)
    print("üìä RESUMO DOS TESTES")
    print("=" * 60)
    
    success_count = len([r for r in results if r['status'] == 'SUCCESS'])
    total_count = len(results)
    
    print(f"‚úÖ Sucessos: {success_count}/{total_count}")
    print(f"‚ùå Falhas: {total_count - success_count}/{total_count}")
    
    if success_count == total_count:
        print("\nüéâ TODOS OS ENDPOINTS FUNCIONANDO PERFEITAMENTE!")
        print("‚úÖ Django V2 backend est√° pronto para uso com dados V1")
    else:
        print("\n‚ö†Ô∏è  ALGUNS ENDPOINTS COM PROBLEMAS")
        print("Verifique se o servidor Django est√° rodando: python manage.py runserver")
    
    return results

if __name__ == "__main__":
    test_api_endpoints()
