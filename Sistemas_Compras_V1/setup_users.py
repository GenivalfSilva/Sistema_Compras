#!/usr/bin/env python3
"""
Script para criar todos os usu√°rios do sistema com seus departamentos e perfis
"""

import os
import sys

# Adiciona o diret√≥rio atual ao path para importar database_local
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database_local import get_local_database

def create_all_users():
    """Cria todos os usu√°rios do sistema"""
    
    # Lista completa de usu√°rios com seus departamentos e perfis
    usuarios = [
        # Administradores
        {"username": "admin", "nome": "Administrador do Sistema", "perfil": "Admin", "departamento": "TI"},
        {"username": "leonardo.fragoso", "nome": "Leonardo Fragoso", "perfil": "Admin", "departamento": "TI"},
        
        # Solicitantes por departamento
        {"username": "joao.silva", "nome": "Jo√£o Silva", "perfil": "Solicitante", "departamento": "Manuten√ß√£o"},
        {"username": "maria.santos", "nome": "Maria Santos", "perfil": "Solicitante", "departamento": "Manuten√ß√£o"},
        {"username": "pedro.oliveira", "nome": "Pedro Oliveira", "perfil": "Solicitante", "departamento": "Manuten√ß√£o"},
        
        {"username": "ana.costa", "nome": "Ana Costa", "perfil": "Solicitante", "departamento": "TI"},
        {"username": "carlos.lima", "nome": "Carlos Lima", "perfil": "Solicitante", "departamento": "TI"},
        
        {"username": "lucia.ferreira", "nome": "L√∫cia Ferreira", "perfil": "Solicitante", "departamento": "RH"},
        {"username": "roberto.alves", "nome": "Roberto Alves", "perfil": "Solicitante", "departamento": "RH"},
        
        {"username": "fernanda.rocha", "nome": "Fernanda Rocha", "perfil": "Solicitante", "departamento": "Financeiro"},
        {"username": "marcos.pereira", "nome": "Marcos Pereira", "perfil": "Solicitante", "departamento": "Financeiro"},
        
        {"username": "juliana.martins", "nome": "Juliana Martins", "perfil": "Solicitante", "departamento": "Marketing"},
        {"username": "rafael.souza", "nome": "Rafael Souza", "perfil": "Solicitante", "departamento": "Marketing"},
        
        {"username": "patricia.gomes", "nome": "Patr√≠cia Gomes", "perfil": "Solicitante", "departamento": "Produ√ß√£o"},
        {"username": "andre.barbosa", "nome": "Andr√© Barbosa", "perfil": "Solicitante", "departamento": "Produ√ß√£o"},
        
        {"username": "camila.reis", "nome": "Camila Reis", "perfil": "Solicitante", "departamento": "Qualidade"},
        {"username": "diego.carvalho", "nome": "Diego Carvalho", "perfil": "Solicitante", "departamento": "Qualidade"},
        
        {"username": "renata.silva", "nome": "Renata Silva", "perfil": "Solicitante", "departamento": "Log√≠stica"},
        {"username": "gustavo.mendes", "nome": "Gustavo Mendes", "perfil": "Solicitante", "departamento": "Log√≠stica"},
        
        # Respons√°veis de Estoque
        {"username": "estoque.supervisor", "nome": "Supervisor de Estoque", "perfil": "Estoque", "departamento": "Estoque"},
        {"username": "claudia.estoque", "nome": "Cl√°udia Estoque", "perfil": "Estoque", "departamento": "Estoque"},
        {"username": "ricardo.almoxarife", "nome": "Ricardo Almoxarife", "perfil": "Estoque", "departamento": "Estoque"},
        
        # Respons√°veis de Suprimentos
        {"username": "suprimentos.gestor", "nome": "Gestor de Suprimentos", "perfil": "Suprimentos", "departamento": "Suprimentos"},
        {"username": "monica.compras", "nome": "M√¥nica Compras", "perfil": "Suprimentos", "departamento": "Suprimentos"},
        {"username": "fernando.cotacao", "nome": "Fernando Cota√ß√£o", "perfil": "Suprimentos", "departamento": "Suprimentos"},
        
        # Aprovadores
        {"username": "diretor.geral", "nome": "Diretor Geral", "perfil": "Aprovador", "departamento": "Diretoria"},
        {"username": "gerente.operacoes", "nome": "Gerente de Opera√ß√µes", "perfil": "Aprovador", "departamento": "Ger√™ncia"},
        {"username": "supervisor.financeiro", "nome": "Supervisor Financeiro", "perfil": "Aprovador", "departamento": "Financeiro"},
    ]
    
    # Conecta ao banco
    db = get_local_database()
    
    if not db.db_available:
        print("‚ùå Erro: Banco de dados n√£o dispon√≠vel")
        return False
    
    print(f"üîÑ Criando {len(usuarios)} usu√°rios...")
    print("-" * 80)
    
    usuarios_criados = 0
    usuarios_existentes = 0
    erros = 0
    
    for usuario in usuarios:
        try:
            # Tenta adicionar o usu√°rio (senha padr√£o: Teste123)
            sucesso = db.add_user(
                username=usuario["username"],
                nome=usuario["nome"],
                perfil=usuario["perfil"],
                departamento=usuario["departamento"],
                senha_hash="Teste123"  # Senha padr√£o
            )
            
            if sucesso:
                print(f"‚úÖ {usuario['username']:<20} | {usuario['nome']:<25} | {usuario['perfil']:<12} | {usuario['departamento']}")
                usuarios_criados += 1
            else:
                print(f"‚ö†Ô∏è  {usuario['username']:<20} | {usuario['nome']:<25} | {usuario['perfil']:<12} | {usuario['departamento']} (j√° existe)")
                usuarios_existentes += 1
                
        except Exception as e:
            print(f"‚ùå {usuario['username']:<20} | Erro: {e}")
            erros += 1
    
    print("-" * 80)
    print(f"üìä Resumo:")
    print(f"   ‚úÖ Usu√°rios criados: {usuarios_criados}")
    print(f"   ‚ö†Ô∏è  Usu√°rios j√° existentes: {usuarios_existentes}")
    print(f"   ‚ùå Erros: {erros}")
    print(f"   üìù Senha padr√£o para todos: 'Teste123'")
    
    return erros == 0

def show_users_by_department():
    """Mostra usu√°rios organizados por departamento"""
    
    db = get_local_database()
    
    if not db.db_available:
        print("‚ùå Erro: Banco de dados n√£o dispon√≠vel")
        return
    
    usuarios = db.get_all_users()
    
    if not usuarios:
        print("‚ö†Ô∏è Nenhum usu√°rio encontrado")
        return
    
    # Organiza usu√°rios por departamento
    por_departamento = {}
    for usuario in usuarios:
        dept = usuario['departamento']
        if dept not in por_departamento:
            por_departamento[dept] = []
        por_departamento[dept].append(usuario)
    
    print("\nüë• Usu√°rios por Departamento:")
    print("=" * 80)
    
    for departamento in sorted(por_departamento.keys()):
        print(f"\nüìÅ {departamento.upper()}")
        print("-" * 40)
        
        for usuario in sorted(por_departamento[departamento], key=lambda x: x['perfil']):
            print(f"   üë§ {usuario['username']:<20} | {usuario['nome']:<25} | {usuario['perfil']}")

def main():
    """Fun√ß√£o principal"""
    print("üë• Setup de Usu√°rios - Sistema de Compras")
    print("=" * 80)
    
    # Cria todos os usu√°rios
    sucesso = create_all_users()
    
    if sucesso:
        print("\n‚úÖ Todos os usu√°rios foram criados com sucesso!")
        
        # Mostra organiza√ß√£o por departamento
        show_users_by_department()
        
        print("\nüéØ Pr√≥ximos passos:")
        print("   ‚Ä¢ Todos os usu√°rios t√™m senha 'Teste123'")
        print("   ‚Ä¢ Fa√ßa login com qualquer usu√°rio para testar")
        print("   ‚Ä¢ Recomenda-se alterar senhas ap√≥s primeiro acesso")
        print("   ‚Ä¢ Execute 'python reset_all_passwords.py' se precisar resetar senhas")
        
    else:
        print("\n‚ùå Alguns erros ocorreram durante a cria√ß√£o dos usu√°rios")
    
    return sucesso

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
