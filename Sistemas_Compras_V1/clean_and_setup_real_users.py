#!/usr/bin/env python3
"""
Script para limpar o banco e criar APENAS os 6 usu√°rios REAIS
"""

import os
import sys

# Adiciona o diret√≥rio atual ao path para importar database_local
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database_local import get_local_database

def clean_and_create_real_users():
    """Remove todos os usu√°rios e cria apenas os 6 usu√°rios REAIS"""
    
    # Lista dos 6 usu√°rios REAIS baseada na MATRIZ_PERMISSOES.md
    usuarios_reais = [
        {"username": "Leonardo.Fragoso", "nome": "Leonardo Fragoso", "perfil": "Solicitante", "departamento": "TI"},
        {"username": "Genival.Silva", "nome": "Genival Silva", "perfil": "Solicitante", "departamento": "Produ√ß√£o"},
        {"username": "Estoque.Sistema", "nome": "Sistema de Estoque", "perfil": "Estoque", "departamento": "Estoque"},
        {"username": "Fabio.Ramos", "nome": "F√°bio Ramos", "perfil": "Suprimentos", "departamento": "Suprimentos"},
        {"username": "Diretoria", "nome": "Diretoria Executiva", "perfil": "Diretoria", "departamento": "Diretoria"},
        {"username": "admin", "nome": "Administrador do Sistema", "perfil": "Admin", "departamento": "TI"},
    ]
    
    # Conecta ao banco
    db = get_local_database()
    
    if not db.db_available:
        print("‚ùå Erro: Banco de dados n√£o dispon√≠vel")
        return False
    
    try:
        cursor = db.conn.cursor()
        
        print("üßπ Limpando banco de dados...")
        print("‚ö†Ô∏è  Removendo TODOS os usu√°rios existentes...")
        
        # Remove todos os usu√°rios
        cursor.execute('DELETE FROM usuarios')
        db.conn.commit()
        
        print("‚úÖ Banco limpo com sucesso!")
        print("\nüë• Criando apenas os 6 usu√°rios REAIS...")
        print("-" * 80)
        
        # Cria apenas os usu√°rios reais
        for usuario in usuarios_reais:
            sucesso = db.add_user(
                username=usuario["username"],
                nome=usuario["nome"],
                perfil=usuario["perfil"],
                departamento=usuario["departamento"],
                senha_hash="Teste123"
            )
            
            if sucesso:
                print(f"‚úÖ {usuario['username']:<20} | {usuario['nome']:<25} | {usuario['perfil']:<12} | {usuario['departamento']}")
            else:
                print(f"‚ùå {usuario['username']:<20} | Erro ao criar usu√°rio")
                return False
        
        print("-" * 80)
        print("‚úÖ Banco configurado com APENAS os 6 usu√°rios reais!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro durante limpeza: {e}")
        return False

def verify_users():
    """Verifica e mostra apenas os usu√°rios no banco"""
    
    db = get_local_database()
    
    if not db.db_available:
        return
    
    usuarios = db.get_all_users()
    
    print(f"\nüìä Verifica√ß√£o Final - Total: {len(usuarios)} usu√°rios")
    print("=" * 60)
    
    for usuario in sorted(usuarios, key=lambda x: x['perfil']):
        print(f"üë§ {usuario['username']:<20} | {usuario['perfil']:<12} | {usuario['departamento']}")
    
    print("=" * 60)
    
    if len(usuarios) == 6:
        print("‚úÖ PERFEITO! Apenas os 6 usu√°rios reais est√£o no banco")
    else:
        print(f"‚ö†Ô∏è  ATEN√á√ÉO! Esperado 6 usu√°rios, encontrado {len(usuarios)}")

def main():
    """Fun√ß√£o principal"""
    print("üßπ Limpeza e Setup dos Usu√°rios REAIS")
    print("üìã Baseado na MATRIZ_PERMISSOES.md")
    print("=" * 80)
    print("‚ö†Ô∏è  ATEN√á√ÉO: Este script ir√° REMOVER todos os usu√°rios existentes!")
    print("üìù Criar√° apenas os 6 usu√°rios reais do sistema original")
    print("=" * 80)
    
    resposta = input("Deseja continuar? (s/N): ").strip().lower()
    
    if resposta not in ['s', 'sim', 'y', 'yes']:
        print("‚ùå Opera√ß√£o cancelada")
        return False
    
    # Executa limpeza e cria√ß√£o
    sucesso = clean_and_create_real_users()
    
    if sucesso:
        # Verifica resultado
        verify_users()
        
        print("\nüéØ Usu√°rios REAIS criados:")
        print("   üë§ Leonardo.Fragoso - Solicitante (TI)")
        print("   üë§ Genival.Silva - Solicitante (Produ√ß√£o)")
        print("   üë§ Estoque.Sistema - Estoque")
        print("   üë§ Fabio.Ramos - Suprimentos")
        print("   üë§ Diretoria - Aprovador")
        print("   üë§ admin - Administrador")
        
        print("\nüîë Todos com senha: 'Teste123'")
        print("‚úÖ Banco pronto para uso!")
        
    return sucesso

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
